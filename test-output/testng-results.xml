<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="6" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-03T12:41:38 EET" name="Suite" finished-at="2023-01-03T12:42:38 EET" duration-ms="60596">
    <groups>
    </groups>
    <test started-at="2023-01-03T12:41:38 EET" name="Test" finished-at="2023-01-03T12:41:58 EET" duration-ms="20609">
      <class name="Tests.testing">
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@1de76cc7]" started-at="2023-01-03T12:41:38 EET" name="beforeMethod" finished-at="2023-01-03T12:41:39 EET" duration-ms="1424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=testing.test1()[pri:0, instance:Tests.testing@1de76cc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:Tests.testing@1de76cc7]" started-at="2023-01-03T12:41:39 EET" name="test1" description="This is test case one now" finished-at="2023-01-03T12:41:56 EET" duration-ms="16790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@1de76cc7]" started-at="2023-01-03T12:41:56 EET" name="afterMethod" finished-at="2023-01-03T12:41:58 EET" duration-ms="2250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=testing.test1()[pri:0, instance:Tests.testing@1de76cc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- Tests.testing -->
    </test> <!-- Test -->
    <test started-at="2023-01-03T12:41:38 EET" name="Test2" finished-at="2023-01-03T12:42:38 EET" duration-ms="60596">
      <class name="Tests.testing">
        <test-method is-config="true" signature="setupSuite()[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:41:27 EET" name="setupSuite" finished-at="2023-01-03T12:41:38 EET" duration-ms="10294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuite -->
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:41:38 EET" name="beforeMethod" finished-at="2023-01-03T12:41:39 EET" duration-ms="1424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=testing.test2()[pri:0, instance:Tests.testing@48aca48b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test2()[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:41:39 EET" name="test2" description="This is test case Two  now" finished-at="2023-01-03T12:42:11 EET" duration-ms="32392" status="FAIL">
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 
at org.testng.AssertJUnit.fail(AssertJUnit.java:65)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:23)
at org.testng.AssertJUnit.assertTrue(AssertJUnit.java:33)
at Tests.testing.test2(testing.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:42:11 EET" name="afterMethod" finished-at="2023-01-03T12:42:12 EET" duration-ms="663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=testing.test2()[pri:0, instance:Tests.testing@48aca48b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:42:12 EET" name="beforeMethod" finished-at="2023-01-03T12:42:14 EET" duration-ms="1476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=testing.test3()[pri:0, instance:Tests.testing@48aca48b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test3()[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:42:14 EET" name="test3" description="This is test case Three  now" finished-at="2023-01-03T12:42:38 EET" duration-ms="24037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:42:38 EET" name="afterMethod" finished-at="2023-01-03T12:42:38 EET" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SUCCESS method=testing.test3()[pri:0, instance:Tests.testing@48aca48b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Tests.testing@48aca48b]" started-at="2023-01-03T12:42:38 EET" name="afterSuite" finished-at="2023-01-03T12:42:38 EET" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tests.testing -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
